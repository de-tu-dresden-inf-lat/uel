<?xml version="1.0" encoding="UTF-8" ?>
<project name="uel-plugin" default="dist" basedir=".">

	<!--
 *
 * @author Julian Mendez
 *
-->

	<!-- For more information about this file, see http://ant.apache.org -->

	<property name="parent.directory" value=".." />
	<property name="project.build.directory" value="${basedir}/target" />

	<!-- Imports 'project.groupId', 'project.artifactId', 'project.version',
	'project.properties.bundle.jars', 'project.properties.bundle.licenses', and 'project.properties.bundle.classpath' properties. -->
	<xmlproperty file="pom.xml" />
	<xmlproperty file="../../pom.xml" />

	<!-- Project-specific properties. -->
	<fail unless="project.groupId">Error: 'project.groupId' is undefined. This property should have the group identifier.</fail>
	<fail unless="project.artifactId">Error: 'project.artifactId' is undefined. This property should have the artifact identifier.</fail>
	<fail unless="project.version">Error: 'project.version' is undefined. This property should have the version number in the form major.minor.patch.</fail>
	<fail unless="project.properties.bundle.jars">Error: 'project.properties.bundle.jars' is undefined.</fail>
	<fail unless="project.properties.bundle.licenses">Error: 'project.properties.bundle.licenses' is undefined.</fail>
	<fail unless="project.properties.bundle.classpath">Error: 'project.properties.bundle.classpath' is undefined.</fail>

	<property name="src.directory" value="src" />

	<property name="_root.directory" value="../.." />
	<property name="_lib.directory" value="${project.build.directory}/lib" />
	<property name="_targetlib.directory" value="target" />
	<property name="groupId.directory" value="uel" />
	<property name="repository.directory" value="../target/jars/lib" />
	<property name="localrepository.directory" value="../lib" />
	<property name="project.build.outputDirectory" value="${project.build.directory}/classes" />
	<property name="_bundle.directory" value="${project.build.directory}" />
	<property name="_bundlejars.directory" value="${project.build.directory}" />
	<property name="_bundleresources.directory" value="${basedir}/src/main/resources" />
	<property name="_bundle.name" value="${project.groupId}" />

	<property name="module.0.name" value="uel-type" />
	<property name="module.1.name" value="uel-rule" />
	<property name="module.2.name" value="uel-sat" />
	<property name="module.3.name" value="uel-asp" />
	<property name="module.4.name" value="uel-core" />
	<property name="module.5.name" value="uel-ui" />
	<property name="module.6.name" value="uel-protege" />
	<property name="lastmodule.name" value="${module.6.name}" />
	<property name="_bundleclasses.directory" value="${_root.directory}/${lastmodule.name}/target/classes" />

	<!-- Cleans everything. -->
	<target name="clean">
		<delete dir="${project.build.directory}" />
	</target>

	<!-- Copies the created jars. -->
	<target name="getjar">
		<mkdir dir="${_lib.directory}/${groupId.directory}/${module.name}/${project.version}" />
		<copy todir="${_lib.directory}/${groupId.directory}/${module.name}/${project.version}">
			<fileset dir="${_root.directory}/${module.name}/${_targetlib.directory}">
				<include name="${module.name}-${project.version}.jar" />
				<include name="${module.name}-${project.version}-sources.jar" />
			</fileset>
			<fileset dir="${_root.directory}/${module.name}">
				<include name="copying.txt" />
				<include name="copying-lesser.txt" />
				<include name="license-2.0.txt" />
			</fileset>
		</copy>
	</target>

	<!-- Compiles all modules and gets their jars. -->
	<target name="getjars">
		<antcall target="getjar">
			<param name="module.name" value="${module.0.name}" />
		</antcall>
		<antcall target="getjar">
			<param name="module.name" value="${module.1.name}" />
		</antcall>
		<antcall target="getjar">
			<param name="module.name" value="${module.2.name}" />
		</antcall>
		<antcall target="getjar">
			<param name="module.name" value="${module.3.name}" />
		</antcall>
		<antcall target="getjar">
			<param name="module.name" value="${module.4.name}" />
		</antcall>
		<antcall target="getjar">
			<param name="module.name" value="${module.5.name}" />
		</antcall>
		<antcall target="getjar">
			<param name="module.name" value="${module.6.name}" />
		</antcall>
	</target>

	<!-- Prepares the local repository. -->
	<target name="getrepository">
		<mkdir dir="${_lib.directory}" />
		<copy todir="${_lib.directory}">
			<fileset dir="${repository.directory}" />
			<fileset dir="${localrepository.directory}" />
		</copy>
	</target>

	<!-- Creates the bundle. -->
	<target name="bundle">
		<mkdir dir="${_bundle.directory}" />
		<jar destfile="${_bundle.directory}/${_bundle.name}.jar">
			<fileset dir="${_bundleresources.directory}" />
			<fileset dir="${_bundleclasses.directory}" />
			<fileset dir="${_bundlejars.directory}" includes="${project.properties.bundle.jars}" />
			<fileset dir="${_bundlejars.directory}" includes="${project.properties.bundle.licenses}" />
			<manifest>
				<attribute name="Bundle-ManifestVersion" value="2" />
				<attribute name="Bundle-SymbolicName" value="${project.groupId};singleton:=true" />
				<attribute name="Bundle-Name" value="UEL Plug-in" />
				<attribute name="Bundle-Version" value="${project.version}" />
				<attribute name="Bundle-Activator" value="org.protege.editor.core.plugin.DefaultPluginActivator" />
				<attribute name="Bundle-Category" value="protege" />
				<attribute name="Bundle-Description" value="UEL Protege plug-in" />
				<attribute name="Bundle-Vendor" value="Chair of Automata Theory - TU Dresden" />
				<attribute name="Bundle-DocURL" value="http://lat.inf.tu-dresden.de" />
				<attribute name="Bundle-ClassPath" value="${project.properties.bundle.classpath}" />
				<attribute name="Import-Package" value="${import.package}" />
				<attribute name="Require-Bundle" value="${require.bundle}" />
			</manifest>
		</jar>
	</target>

	<target name="dist" depends="clean, getjars, getrepository, bundle" />

</project>

