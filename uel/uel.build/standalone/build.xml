<?xml version="1.0" encoding="UTF-8" ?>
<project name="uel.build.standalone" default="dist" basedir=".">

	<!--
 *
 * @author Julian Mendez
 *
-->

	<!-- 
	For more information about this file, see http://ant.apache.org 
	-->

	<property name="project.groupId" value="uel" />
	<property name="project.artifactId" value="build.standalone" />

	<!-- Imports version properties. -->
	<property file="version.properties" />

	<property name="project.build.directory" value="${basedir}/target" />
	<property name="src.directory" value="src" />

	<property name="_root.directory" value="../.." />
	<property name="_lib.directory" value="${project.build.directory}/lib" />
	<property name="_targetlib.directory" value="target" />
	<property name="_targetclasses.directory" value="${_targetlib.directory}/classes" />
	<property name="groupId.directory" value="uel" />
	<property name="repository.directory" value="../jars/lib" />
	<property name="project.build.outputDirectory" value="${project.build.directory}/classes" />
	<property name="_jars.directory" value="${basedir}/.." />
	<property name="_bundle.directory" value="${project.build.directory}" />
	<property name="_bundlejars.directory" value="${project.build.directory}" />
	<property name="_bundle.name" value="uel-${project.version}-standalone" />

	<property name="module.0.name" value="uel.type" />
	<property name="module.1.name" value="uel.rule" />
	<property name="module.2.name" value="uel.sat" />
	<property name="module.3.name" value="uel.plugin" />

	<!-- Cleans everything. -->
	<target name="clean">
		<delete dir="${project.build.directory}" />
	</target>

	<!-- Copies the compiled classes and the created jars. -->
	<target name="getjar">
		<mkdir dir="${_lib.directory}/${groupId.directory}/${module.name}/${project.version}" />
		<copy todir="${project.build.outputDirectory}">
			<fileset dir="${_root.directory}/${module.name}/${_targetclasses.directory}" />
		</copy>

		<mkdir dir="${_lib.directory}/${groupId.directory}/${module.name}/${project.version}" />
		<copy todir="${_lib.directory}/${groupId.directory}/${module.name}/${project.version}">
			<fileset dir="${_root.directory}/${module.name}/${_targetlib.directory}">
				<include name="${module.name}-${project.version}.jar" />
				<include name="${module.name}-${project.version}-sources.jar" />
			</fileset>
			<fileset dir="${_root.directory}/${module.name}">
				<include name="copying.txt" />
				<include name="copying-lesser.txt" />
			</fileset>
		</copy>
	</target>

	<!-- Compiles all modules and gets their jars. -->
	<target name="getjars">
		<antcall target="getjar">
			<param name="module.name" value="${module.0.name}" />
		</antcall>
		<antcall target="getjar">
			<param name="module.name" value="${module.1.name}" />
		</antcall>
		<antcall target="getjar">
			<param name="module.name" value="${module.2.name}" />
		</antcall>
		<antcall target="getjar">
			<param name="module.name" value="${module.3.name}" />
		</antcall>
	</target>

	<!-- Prepares the local repository. -->
	<target name="getrepository">
		<mkdir dir="${_lib.directory}" />
		<copy todir="${_lib.directory}">
			<fileset dir="${repository.directory}" />
		</copy>
	</target>

	<!-- Decompresses the external jars. -->
	<target name="unjar">
		<mkdir dir="${_targetclasses.directory}" />
		<unjar dest="${_targetclasses.directory}">
			<fileset dir="${_bundlejars.directory}" includes="${bundlejars}" />
		</unjar>
	</target>

	<!-- Creates the bundle. -->
	<target name="bundle">
		<mkdir dir="${_bundle.directory}" />
		<jar destfile="${_bundle.directory}/${_bundle.name}.jar">
			<fileset dir="${project.build.outputDirectory}" />
			<fileset dir="${_bundlejars.directory}" includes="${bundlelicenses}" />
			<manifest>
				<attribute name="Implementation-Title" value="${project.groupId}" />
				<attribute name="Implementation-Version" value="${project.version}" />
				<attribute name="Main-Class" value="${mainclass}" />
			</manifest>
		</jar>
	</target>

	<target name="dist" depends="clean, getjars, getrepository, unjar, bundle" />

</project>

