<?xml version="1.0" encoding="UTF-8" ?>
<project name="uel.build" default="dist" basedir=".">

	<!--
 *
 * @author Julian Mendez
 *
-->

	<!-- 
	For more information about this file, see http://ant.apache.org 
	-->

	<property name="project.groupId" value="uel" />
	<property name="project.artifactId" value="build" />

	<!-- Imports version properties. -->
	<property file="version.properties" />

	<property name="project.build.directory" value="${basedir}/target" />
	<property name="src.directory" value="src" />

	<property name="_root.directory" value=".." />
	<property name="_lib.directory" value="${project.build.directory}/lib" />
	<property name="_targetlib.directory" value="target" />
	<property name="groupId.directory" value="uel" />
	<property name="project.build.outputDirectory" value="${project.build.directory}/classes" />
	<property name="_jars.directory" value="${basedir}/.." />
	<property name="_resources.directory" value="${src.directory}/main/resources" />
	<property name="_release.directory" value="${project.build.directory}/release/${project.groupId}-${project.version}" />
	<property name="_manifest.directory" value="${src.directory}/main/manifest/MANIFEST.MF" />
	<property name="_javadoc.directory" value="${project.build.directory}/site/javadoc" />
	<property name="_src.javadoc.directory" value="${src.directory}/main/javadoc" />

	<property name="module.0.name" value="uel.type" />
	<property name="module.1.name" value="uel.rule" />
	<property name="module.2.name" value="uel.sat" />
	<property name="module.3.name" value="uel.plugin" />
	<property name="lastmodule.name" value="${module.3.name}" />
	<property name="build.1.name" value="library" />
	<property name="build.1.filename" value="uel-${project.version}" />
	<property name="build.2.name" value="plugin" />
	<property name="build.2.filename" value="de.tudresden.inf.lat.uel" />
	<property name="build.3.name" value="standalone" />
	<property name="build.3.filename" value="uel" />

	<!-- Cleans everything. -->
	<target name="clean">
		<delete dir="${project.build.directory}" />
	</target>

	<!-- Compiles all modules and gets their jars. -->
	<target name="compilemodules">
		<subant antfile="${_root.directory}/${module.0.name}/build.xml" buildpath="." />
		<subant antfile="${_root.directory}/${module.1.name}/build.xml" buildpath="." />
		<subant antfile="${_root.directory}/${module.2.name}/build.xml" buildpath="." />
		<subant antfile="${_root.directory}/${module.3.name}/build.xml" buildpath="." />
	</target>

	<!-- Prepares the jars for the release. -->
	<target name="preparejars">
		<copy todir="${_release.directory}/lib">
			<fileset dir="${_root.directory}/${module.name}/target" includes="${module.name}-${project.version}.jar" />
		</copy>
		<copy todir="${_release.directory}/src">
			<fileset dir="${_root.directory}/${module.name}/target" includes="${module.name}-${project.version}-sources.jar" />
		</copy>
	</target>

	<!-- Executes the build modules. -->
	<target name="bundle">
		<subant antfile="${build.1.name}/build.xml" buildpath="." />
		<subant antfile="${build.2.name}/build.xml" buildpath="." />
		<subant antfile="${build.3.name}/build.xml" buildpath="." />
	</target>

	<!-- Creates the release. -->
	<target name="release">
		<mkdir dir="${_release.directory}/doc" />

		<antcall target="preparejars">
			<param name="module.name" value="${module.0.name}" />
		</antcall>
		<antcall target="preparejars">
			<param name="module.name" value="${module.1.name}" />
		</antcall>
		<antcall target="preparejars">
			<param name="module.name" value="${module.2.name}" />
		</antcall>
		<antcall target="preparejars">
			<param name="module.name" value="${module.3.name}" />
		</antcall>

		<copy todir="${_release.directory}/${build.1.name}">
			<fileset dir="${build.1.name}/target" includes="${build.1.filename}.jar" />
		</copy>

		<copy todir="${_release.directory}/${build.2.name}">
			<fileset dir="${build.2.name}/target" includes="${build.2.filename}.jar" />
		</copy>

		<copy todir="${_release.directory}/${build.3.name}">
			<fileset dir="${build.3.name}/target" includes="${build.3.filename}.jar" />
		</copy>

		<zip destfile="${_release.directory}/doc/${project.groupId}-${project.version}-javadoc.zip">
			<fileset dir="${_root.directory}/${lastmodule.name}/target/site" includes="apidocs/**" />
		</zip>

		<zip destfile="${project.build.directory}/${project.groupId}-${project.version}.zip">
			<fileset dir="${_release.directory}/.." includes="${project.groupId}-${project.version}/**" />
		</zip>
	</target>

	<target name="dist" depends="clean, compilemodules, bundle, release">
		<!--buildnumber file="version.properties"/-->
	</target>

</project>

