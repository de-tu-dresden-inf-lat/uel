<?xml version="1.0" encoding="UTF-8" ?>
<project name="parent" default="dist" basedir=".">

	<!--
 *
 * @author Julian Mendez
 *
-->

	<!-- 
	For more information about this file, see http://ant.apache.org 
	-->

	<property name="groupId" value="uel" />
	<property name="artifactId" value="parent" />

	<!-- Imports version properties. -->
	<property file="version.properties" />

	<!-- 

	The following version properties should be defined at this point : 
	  * version : has the version number of the form major.minor.patch 
	  * build.number : has the build number
	  * dependencies : has a space-separated list of the jars required to compile the project and run the test cases
	  * javadocsrc : has a colon-separated list of source directories for the javadoc

	Source directories: (src)
	  * src/main/javadoc : text for the javadoc
	  * src/main/java : source code of the main part
	  * src/test/java : source code of the unit tests

	Generated directories: (target)
	  * target/classes : compiled classes
	  * target/site/apidocs : generated javadoc
	  * target/report : generated reports of unit tests
	  * target/test-classes : compiled unit test classes

	-->

	<property name="project.build.directory" value="${basedir}/target" />
	<property name="src.directory" value="src" />

	<property name="_src.javadoc.directory" value="${src.directory}/main/javadoc" />
	<property name="project.build.sourceDirectory" value="${src.directory}/main/java" />
	<property name="project.build.testSourceDirectory" value="${src.directory}/test/java" />
	<property name="_src.appdata.directory" value="${src.directory}/data" />
	<property name="_jars.directory" value="${basedir}/.." />
	<property name="_app.directory" value="${project.build.directory}/app" />
	<property name="_javadoc.directory" value="${project.build.directory}/site/apidocs" />
	<property name="project.build.outputDirectory" value="${project.build.directory}/classes" />
	<property name="_prjlib.directory" value="${project.build.directory}" />
	<property name="_srclib.directory" value="${project.build.directory}" />
	<property name="project.build.testOutputDirectory" value="${project.build.directory}/test-classes" />
	<property name="_test.report.directory" value="${project.build.directory}/report" />
	<property name="_zipfile.directory" value="${basedir}/../${groupId}-${artifactId}-${version}.${build.number}.zip" />
	<property name="_debuglevel" value="lines,vars,source" />

	<path id="libs.directory">
		<fileset dir="${_jars.directory}" includes="${dependencies}" />
	</path>

	<patternset id="javadoc.patternset">
		<include name="${_javadoc.directory}/**" />
	</patternset>

	<patternset id="testclasses.patternset">
		<include name="**/*Test.java" />
	</patternset>

	<!-- Cleans everything. -->
	<target name="clean">
		<delete dir="${project.build.directory}" />
	</target>

	<!-- Creates a jar with the source code. -->
	<target name="source" depends="clean">
		<mkdir dir="${_srclib.directory}" />
		<jar destfile="${_srclib.directory}/${artifactId}-${version}-sources.jar" basedir="${basedir}">
			<manifest>
				<attribute name="Implementation-Title" value="${groupId}-${artifactId}" />
				<attribute name="Implementation-Version" value="${version}" />
			</manifest>
		</jar>
	</target>

	<!-- Compiles the whole project. -->
	<target name="compile">
		<mkdir dir="${project.build.outputDirectory}" />
		<javac srcdir="${project.build.sourceDirectory}" destdir="${project.build.outputDirectory}" classpathref="libs.directory" debug="on" debuglevel="${_debuglevel}" />
		<mkdir dir="${project.build.testOutputDirectory}" />
		<javac srcdir="${project.build.testSourceDirectory}" destdir="${project.build.testOutputDirectory}" classpath="${project.build.outputDirectory}" classpathref="libs.directory" debug="on" debuglevel="${_debuglevel}" />
	</target>

	<!-- Performs the unit tests. -->
	<target name="test" depends="compile">
		<mkdir dir="${_test.report.directory}" />
		<junit printsummary="on" haltonfailure="yes" fork="yes">
			<classpath>
				<pathelement path="${project.build.outputDirectory}" />
				<pathelement path="${project.build.testOutputDirectory}" />
				<fileset dir="${_jars.directory}" includes="${dependencies}" />
			</classpath>
			<formatter type="plain" usefile="on" />
			<batchtest fork="yes" todir="${_test.report.directory}">
				<fileset dir="${project.build.testSourceDirectory}">
					<patternset refid="testclasses.patternset" />
				</fileset>
			</batchtest>
		</junit>
	</target>

	<!-- Creates the javadoc. -->
	<target name="javadoc">
		<mkdir dir="${_javadoc.directory}" />
		<javadoc packagenames="*" sourcepath="${javadocsrc}" destdir="${_javadoc.directory}" version="true" use="true" windowtitle="${groupId}-${artifactId}" overview="${_src.javadoc.directory}/overview.html" classpathref="libs.directory" access="package" />
	</target>

	<!-- Creates a jar with the binaries. -->
	<target name="jar" depends="compile">
		<mkdir dir="${_prjlib.directory}" />
		<jar destfile="${_prjlib.directory}/${artifactId}-${version}.jar" basedir="${project.build.outputDirectory}">
			<manifest>
				<attribute name="Implementation-Title" value="${groupId}-${artifactId}" />
				<attribute name="Implementation-Version" value="${version}" />
			</manifest>
		</jar>
	</target>

	<!-- Creates a compressed file containing the whole project. -->
	<target name="zip">
		<delete file="${_zipfile.directory}" />
		<zip destfile="${_zipfile.directory}" basedir="${basedir}" />
	</target>

	<target name="dist" depends="clean, source, compile, javadoc, jar">
		<!--buildnumber file="version.properties"/-->
	</target>

</project>

